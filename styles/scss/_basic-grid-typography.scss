:root {
  --typescale: 1.15;
  /* This is the heading scaling factor relative to the <p>. ( h4 > h3 > h2 > h1). It's a 'type size ramp'.*/

  --baselineratio: calc(16/9);
  /* This is the 'line-height:basefont size' ratio ( i.e 16/9 = 1.777778)*/

  --basegrid: 32px;
  /* the body grid size on phone */
  --basegrid-tablet: 28px;
  --basegrid-laptop: 32px;
  --basegrid-wide: 36px;

  --baseline: calc(var(--baselineratio) * 1rem);
  --basefont: calc(var(--basegrid) / var(--baselineratio));
  --basefont-tablet: calc(var(--basegrid-tablet) / var(--baselineratio));
  --basefont-laptop: calc(var(--basegrid-laptop) / var(--baselineratio));
  --basefont-wide: calc(var(--basegrid-wide) / var(--baselineratio));

  --basebackground: #fff; // flipped in dark mode
  --basefontcolor: #222;

  --basebackground-dark: #111518;
  --basefontcolor-dark: #ddd;

  font-family: Roboto, sans-serif;
  font-weight: 300;
}



.container {
  /* This is handy for stopping layouts running wide on super wide monitors. It's unneccessary if you have proper layout CSS */
  //width: 62rem;
  max-width: 58rem;
  margin: 0 auto !important;
  //outline: 1px red dashed;
}

@import url('https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,500');
/*
lg: 80em,
md: 64em,
sm: 48em,
xs: 36em
*/

:root {
  /* DEFAULT - mobile */
  font-size: var(--basefont);
  line-height: var(--baseline);
}

/* Medium devices (tablets, 48em and up)*/
@media (min-width: 48em) {
  :root {
    font-size: var(--basefont-tablet);
    --typescale: 1.25; // we ramp up the typescale on non-phone screens. This means h1s are larger than Ps in RELATIVE terms on non-phones
  }
}

/* Large devices (desktops, 62em and up) */
@media (min-width: 64em) {
  :root {
    font-size: var(--basefont-laptop);
  }
}

/* Extra large devices (large desktops, 75em and up)*/
@media (min-width: 80em) {
  :root {
    font-size: var(--basefont-wide);
  }
}

/* The New Typography */

h1,
.is-size1 {
  font-size: calc(var(--typescale) * var(--typescale) * var(--typescale) * var(--typescale) * 1rem);
  line-height: calc(var(--baseline) * 2);
  /* 4 grid lines */
  margin-top: calc(var(--baseline) / 2);
  margin-bottom: var(--baseline);
  font-weight: 400;
}

h2,
.is-size2 {
  font-size: calc(var(--typescale) * var(--typescale) * var(--typescale) * 1rem);
  line-height: calc(var(--baseline) * 1.5);
  margin-top: 0rem;
  margin-bottom: calc(var(--baseline) / 1);
  font-weight: 400;
}

h3,
.is-size-3,
.h3 {
  font-size: calc(var(--typescale) * var(--typescale) * 1rem);
  line-height: calc(var(--baseline) * 1);
  margin-top: 0;
  margin-bottom: calc(var(--baseline) / 2);
  font-weight: 400;
}

h4,
.is-size-h4 {
  font-size: calc(var(--typescale) * 1rem);
  line-height: calc(var(--baseline) * 1);
  margin-top: calc(var(--baseline) * 1);
  margin-bottom: calc(var(--baseline) /2);
  font-weight: 400;
}

h5,
.is-size-5 {
  font-size: 1rem;
  line-height: calc(var(--baseline) / 2);
  margin-top: calc(var(--baseline) / 2);
  margin-bottom: calc(var(--baseline) / 2);
  font-weight: 400;
  //text-transform: capitalize;
}

h2:first-child,
h3:first-child,
h4:first-child,
h5:first-child {
  margin-top: 0; // kill the top margin when first child (the container should have padding instead)
}

p,
ul,
ol,
pre,
table,
blockquote,
.is-size-base,
figcaption {
  font-size: 1rem;
  font-weight: 300;
  margin-top: 0rem;
  line-height: calc(var(--baseline) / 1);
  margin-bottom: calc(var(--baseline) / 1);
}

.major {
  font-weight: 500;
  font-size: calc(var(--typescale) * var(--typescale) * var(--typescale) * var(--typescale) * var(--typescale) * 1rem);
  line-height: calc(var(--baseline) * 3);
}

.minor {
  font-size: calc(1rem / var(--typescale));
  line-height: calc(var(--baseline) / 1.5);
  margin-top: 0;
  margin-bottom: calc(var(--baseline) / 2);
}

.small {
  font-size: calc(1rem / var(--typescale) / var(--typescale));
  line-height: calc(var(--baseline) / 2);
  margin-top: 0;
  margin-bottom: calc(var(--baseline) / 2);
}

ul ul,
ol ol,
ul ol,
ol ul {
  margin-top: 0rem;
  margin-bottom: 0rem;
}

/* Let's make sure all's aligned */
hr,
.hr {
  border-top: 1px solid #8c8b8b;
  margin: 0;
  height: 0;
  background: none;
}

b,
i,
strong,
em,
small,
code {
  //line-height: 0;
}



sub,
sup {
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

a:link,
a:visited {
  text-decoration: none;
  color: #20272f;
}


.dark a:link,
.dark a:visited {
  text-decoration: none;
  color: #fff;
}



::placeholder {
  color: #bbb;
}

.hznav {
  /* add to parent to turn list into horizontal text nav*/
  display: flex;
  margin: 0;
  padding: 0;
  list-style: none;
  justify-content: space-between;
  align-items: stretch;
  line-height: calc(var(--baseline) / 2);
}

.hzlist {
  /* floated list */
  list-style: none;
  line-height: calc(var(--baseline) / 2);
  float: left;
  clear: right;
  margin: 0;
  padding: 0;
  display: flex;

  li {
    float: left;
    margin: 0 1rem 0 0;
    align-items: center;
    display: flex;
  }

  &~p {
    clear: both;
  }
}

form {
  padding: 0;
  margin: 0;
}

.fa,
.fas {
  font-family: "Font Awesome 5 Pro";
  font-weight: 900;
  margin-right: 8px;
}



/* CSS RESETS */
body,
figure {
  margin: 0;
  padding: 0;
}


/* Useful text classes  */
.clearright {
  clear: right
}

.clearleft {
  clear: left
}

.clearboth {
  clear: both
}

.textcenter {
  text-align: center
}

.textleft {
  text-align: left
}

.textright {
  text-align: right
}